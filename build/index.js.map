{"version":3,"file":"index.js","mappings":"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","sources":["webpack://ev-crossword-viewer/./src/edit.js","webpack://ev-crossword-viewer/./src/save.js","webpack://ev-crossword-viewer/external window \"React\"","webpack://ev-crossword-viewer/external window \"ReactJSXRuntime\"","webpack://ev-crossword-viewer/external window [\"wp\",\"blockEditor\"]","webpack://ev-crossword-viewer/external window [\"wp\",\"blocks\"]","webpack://ev-crossword-viewer/external window [\"wp\",\"components\"]","webpack://ev-crossword-viewer/external window [\"wp\",\"i18n\"]","webpack://ev-crossword-viewer/webpack/bootstrap","webpack://ev-crossword-viewer/webpack/runtime/compat get default export","webpack://ev-crossword-viewer/webpack/runtime/define property getters","webpack://ev-crossword-viewer/webpack/runtime/hasOwnProperty shorthand","webpack://ev-crossword-viewer/webpack/runtime/make namespace object","webpack://ev-crossword-viewer/./src/index.js"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Imports the InspectorControls component, which is used to wrap\n * the block's custom controls that will appear in in the Settings\n * Sidebar when the block is selected.\n *\n * Also imports the React hook that is used to mark the block wrapper\n * element. It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#inspectorcontrols\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { RichText, InspectorControls, useBlockProps } from '@wordpress/block-editor';\n\n/**\n * Imports the necessary components that will be used to create\n * the user interface for the block's settings.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/panel/#panelbody\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/text-control/\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/toggle-control/\n */\nimport { PanelBody, TextControl, ToggleControl } from '@wordpress/components';\n\n/**\n * Imports the useEffect React Hook. This is used to set an attribute when the\n * block is loaded in the Editor.\n *\n * @see https://react.dev/reference/react/useEffect\n */\nimport { useEffect } from 'react';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {Object}   props.attributes    Available block attributes.\n * @param {Function} props.setAttributes Function that updates individual attributes.\n *\n * @return {Element} Element to render.\n */\nexport default function Edit( { attributes, setAttributes } ) {\n\tconst blockProps = useBlockProps();\n\tconst {\n\t\tcontent,\n\t\ttextField,\n\t} = attributes;\n\n\tfunction onChangeContent( newContent ) {\n\t\tsetAttributes( { content: newContent } );\n\t}\n\n\tfunction onChangeTextField( newValue ) {\n\t\tsetAttributes( { textField: newValue } );\n\t}\n\n\t// When the block loads ...\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Settings', 'ev-crossword-viewer' ) }>\n\n\t\t\t\t\t{ (\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tlabel=\"EV-Crossword\"\n\t\t\t\t\t\t\thelp=\"Name of crossword to display\"\n\t\t\t\t\t\t\tvalue={ textField }\n\t\t\t\t\t\t\tonChange={ onChangeTextField }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t) }\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t{/*<p { ...useBlockProps() }>Â© { cwtitle }</p>*/}\n\n\t\t\t<RichText\n\t\t\t\t{ ...blockProps }\n\t\t\t\tkey=\"editable\"\n\t\t\t\ttagName=\"p\"\n\t\t\t\tonChange={ onChangeContent }\n\t\t\t\tvalue={ content }\n\t\t\t\tplaceholder = \"Crossword name\"\n\t\t\t/>\n\n\t\t</>\n\t);\n}\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { RichText, useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n *\n * @return {Element} Element to render.\n */\nexport default function save( { attributes } ) {\n\tconst {\n\t\tcontent,\n\t\ttextField,\n\t} = attributes;\n\tconst blockProps = useBlockProps.save();\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<RichText.Content value={ content } tagName=\"p\" />\n\n\t\t\t<h2>Ev Crossword Viewer Fields</h2>\n\t\t\t<ul>\n\t\t\t\t<li>Text Field: { textField }</li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","module.exports = window[\"React\"];","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n/**\n * Define a custom SVG icon for the block. This icon will appear in\n * the Inserter and when the user selects the block in the Editor.\n */\nconst calendarIcon = (\n\t<svg\n\t\tviewBox=\"0 0 24 24\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\taria-hidden=\"true\"\n\t\tfocusable=\"false\"\n\t>\n\t\t<path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm.5 16c0 .3-.2.5-.5.5H5c-.3 0-.5-.2-.5-.5V7h15v12zM9 10H7v2h2v-2zm0 4H7v2h2v-2zm4-4h-2v2h2v-2zm4 0h-2v2h2v-2zm-4 4h-2v2h2v-2zm4 0h-2v2h2v-2z\"></path>\n\t</svg>\n);\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( metadata.name, {\n\ticon: calendarIcon,\n\tattributes: {\n\t\tcontent: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'p',\n\t\t},\n\t\ttextField: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n"],"names":["__","RichText","InspectorControls","useBlockProps","PanelBody","TextControl","ToggleControl","useEffect","createElement","_createElement","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Edit","attributes","setAttributes","blockProps","content","textField","onChangeContent","newContent","onChangeTextField","newValue","children","title","__nextHasNoMarginBottom","__next40pxDefaultSize","label","help","value","onChange","key","tagName","placeholder","save","Content","registerBlockType","metadata","calendarIcon","viewBox","xmlns","focusable","d","name","icon","type","source","selector","edit"],"sourceRoot":""}